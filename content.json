{"meta":{"title":"Recopec","subtitle":"","description":"��","author":"Recopec","url":"https://blog.irec.moe","root":"/"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2022-05-18T07:27:55.463Z","updated":"2022-05-18T07:27:55.463Z","comments":true,"path":"2022/05/18/hello-world/","link":"","permalink":"https://blog.irec.moe/2022/05/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"C 的有意思的 题目","slug":"C 的有意思的 题目","date":"2022-04-19T10:58:04.755Z","updated":"2022-05-18T11:30:28.590Z","comments":true,"path":"2022/04/19/C 的有意思的 题目/","link":"","permalink":"https://blog.irec.moe/2022/04/19/C%20%E7%9A%84%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%20%E9%A2%98%E7%9B%AE/","excerpt":"","text":"C 的有意思的 题目多项式加法（5分）题目内容�? 一个多项式可以表达为x的各次幂与系数乘积的和，比如�? 2x6+3x5+12x3+6x+20 现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出�? 程序要处理的幂最大为100�? 输入格式: 总共要输入两个多项式，每个多项式的输入格式如下： 每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂�? 注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了�?0次幂的系数为0时还是会出现在输入数据中�? 输出格式�? 从最高幂开始依次降�?0幂，如： 2x6+3x5+12x3-6x+20 注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数�?0则不需要有那项�? 输入样例�? 6 2 5 3 3 12 1 6 0 20 6 2 5 3 2 12 1 6 0 20 输出样例�? 4x6+6x5+12x3+12x2+12x+40 时间限制�?500ms内存限制�?32000kb 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667#include &lt;stdio.h&gt;#include &lt;math.h&gt;int main() &#123; int N = 101; int fac_arr[N]; int count = 0, inputMod, inputPow, maxPow = 0; for (int i = 0; i &lt; N; i++) &#123; fac_arr[i] = 0; &#125; while (count != 2) &#123; scanf(&quot;%d %d&quot;, &amp;inputMod, &amp;inputPow); fac_arr[inputMod] += inputPow; if (inputMod == 0) &#123; count++; &#125; &#125; for (int i = N; i &gt; 0; i--) &#123; if (fac_arr[i] != 0) &#123; maxPow = i; break; &#125; &#125; if (maxPow == 0) &#123; printf(&quot;%d&quot;, fac_arr[0]); &#125; else &#123; for (int i = maxPow; i &gt;= 0; i--) &#123; // i 为幂 fac_arr[i] 为对应幂的系�? // 当幂 大于1 的时�? if (i &gt; 1) &#123; // 当系数大�?1的时�? 输出 系数x�? 这种格式 if (abs(fac_arr[i]) &gt; 1) &#123; printf(&quot;%dx%d&quot;, abs(fac_arr[i]), i); &#125; else if (abs(fac_arr[i]) == 1) &#123; // 如果系数等于1，则输出 x�? 这种格式 printf(&quot;x%d&quot;, i); &#125; // 当幂 等于1 的时�? &#125; else if (i == 1) &#123; // 当系数大�?1 输出 系数x 这种格式 if (abs(fac_arr[i]) &gt; 1) &#123; printf(&quot;%dx&quot;, fac_arr[i]); &#125; else if (abs(fac_arr[i]) == 1) &#123; printf(&quot;x&quot;); &#125; // 当幂 等于 0 的时�? &#125; else if (i == 0) &#123; // 判断 x0 的系�? 如果不等�?0就输出系�? 因为 x0 等于1 所以不做处�? if (abs(fac_arr[i]) != 0) &#123; printf(&quot;%d&quot;, fac_arr[i]); &#125; &#125; // 单独判断系数情况，输出符�? if (i &gt; 0) &#123; if (fac_arr[i - 1] &lt; 0) &#123; printf(&quot;-&quot;); &#125; else if (fac_arr[i - 1] &gt; 0) &#123; printf(&quot;+&quot;); &#125; &#125; &#125; &#125;&#125;","categories":[],"tags":[]}],"categories":[],"tags":[]}